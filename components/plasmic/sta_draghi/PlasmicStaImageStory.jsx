// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: uGTKGHAJVMXm8ZgFsPiEnc
// Component: xiRghhzFUA
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_sta_draghi.module.css"; // plasmic-import: uGTKGHAJVMXm8ZgFsPiEnc/projectcss
import sty from "./PlasmicStaImageStory.module.css"; // plasmic-import: xiRghhzFUA/css

export const PlasmicStaImageStory__VariantProps = new Array();

export const PlasmicStaImageStory__ArgProps = new Array("children");

export const defaultStaImageStory__Args = {};

function PlasmicStaImageStory__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultStaImageStory__Args, props.args);
  const $props = args;
  const $ctx = ph.useDataEnv?.() || {};
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__xzPkX
        )}
      >
        <React.Fragment>
          <React.Fragment>{""}</React.Fragment>
          <h5
            data-plasmic-name={"h5"}
            data-plasmic-override={overrides.h5}
            className={classNames(
              projectcss.all,
              projectcss.h5,
              projectcss.__wab_text,
              sty.h5
            )}
          >
            {"Aperiam, eaque ipsa quae ab illo"}
          </h5>
          <React.Fragment>
            {
              "Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi "
            }
          </React.Fragment>
        </React.Fragment>
      </div>

      {p.renderPlasmicSlot({
        defaultContents: (
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__nu9H)}
            displayHeight={"329px"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"621px"}
            loading={"lazy"}
          />
        ),

        value: args.children
      })}

      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__nhkkD
        )}
      >
        {
          "Die Suche nach einem Nachfolger von Staatspräsident Sergio Mattarella (links) bringt die Regierung von Premier Mario Draghi (rechts) ins Wanken. \nOb er das Amt wechseln würde, ist unklar."
        }
      </div>

      <p.Stack
        as={"div"}
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox)}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__uPzz7
          )}
        >
          {
            "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit"
          }
        </div>

        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__jisis
          )}
        >
          {
            "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit"
          }
        </div>

        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__abLoD
          )}
        >
          {
            "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit"
          }
        </div>
      </p.Stack>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root", "h5", "freeBox"],
  h5: ["h5"],
  freeBox: ["freeBox"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicStaImageStory__ArgProps,
      internalVariantPropNames: PlasmicStaImageStory__VariantProps
    });

    return PlasmicStaImageStory__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicStaImageStory";
  } else {
    func.displayName = `PlasmicStaImageStory.${nodeName}`;
  }
  return func;
}

export const PlasmicStaImageStory = Object.assign(
  // Top-level PlasmicStaImageStory renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h5: makeNodeComponent("h5"),
    freeBox: makeNodeComponent("freeBox"),
    // Metadata about props expected for PlasmicStaImageStory
    internalVariantProps: PlasmicStaImageStory__VariantProps,
    internalArgProps: PlasmicStaImageStory__ArgProps
  }
);

export default PlasmicStaImageStory;
/* prettier-ignore-end */
