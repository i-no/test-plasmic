// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: uGTKGHAJVMXm8ZgFsPiEnc
// Component: PghwoN5xA5
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import StaImageStory from "../../StaImageStory"; // plasmic-import: xiRghhzFUA/component
import StaPersonals from "../../StaPersonals"; // plasmic-import: OWFGQTuz6D/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_sta_draghi.module.css"; // plasmic-import: uGTKGHAJVMXm8ZgFsPiEnc/projectcss
import sty from "./PlasmicPage2.module.css"; // plasmic-import: PghwoN5xA5/css

export const PlasmicPage2__VariantProps = new Array();

export const PlasmicPage2__ArgProps = new Array();

export const defaultPage2__Args = {};

function PlasmicPage2__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultPage2__Args, props.args);
  const $props = args;
  const $ctx = ph.useDataEnv?.() || {};
  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <StaImageStory
            data-plasmic-name={"staImageStory"}
            data-plasmic-override={overrides.staImageStory}
            className={classNames("__wab_instance", sty.staImageStory)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__dbUto)}
              displayHeight={"329px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"621px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/sta_draghi/images/image.png",
                fullWidth: 800,
                fullHeight: 533,
                aspectRatio: undefined
              }}
            />
          </StaImageStory>

          <p.Stack
            as={"div"}
            data-plasmic-name={"freeBox"}
            data-plasmic-override={overrides.freeBox}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox)}
          >
            <StaPersonals
              className={classNames("__wab_instance", sty.staPersonals__ss8Qi)}
              slot={
                "Der 66-jährige Pier Ferdinando Casini war 1983 zum ersten Mal in die Abgeordnetenkammer gewählt worden. Nach dem Zusammenbruch der Democrazia Cristiana Anfang der 90er-Jahre gründete er eine eigene kleine Zentrumspartei, die sich mit dem "
              }
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__pKoR)}
                displayHeight={"100px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"145px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/sta_draghi/images/image2.png",
                  fullWidth: 394,
                  fullHeight: 279,
                  aspectRatio: undefined
                }}
              />
            </StaPersonals>

            <StaPersonals
              className={classNames("__wab_instance", sty.staPersonals__ns6E5)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__oaNzr)}
                displayHeight={"100px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"131px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/sta_draghi/images/image7.png",
                  fullWidth: 393,
                  fullHeight: 323,
                  aspectRatio: undefined
                }}
              />
            </StaPersonals>

            <StaPersonals
              className={classNames("__wab_instance", sty.staPersonals__iLw10)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__uRi27)}
                displayHeight={"100px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/sta_draghi/images/image6.png",
                  fullWidth: 485,
                  fullHeight: 342,
                  aspectRatio: undefined
                }}
              />
            </StaPersonals>
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "staImageStory", "freeBox"],
  staImageStory: ["staImageStory"],
  freeBox: ["freeBox"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPage2__ArgProps,
      internalVariantPropNames: PlasmicPage2__VariantProps
    });

    return PlasmicPage2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPage2";
  } else {
    func.displayName = `PlasmicPage2.${nodeName}`;
  }
  return func;
}

export const PlasmicPage2 = Object.assign(
  // Top-level PlasmicPage2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    staImageStory: makeNodeComponent("staImageStory"),
    freeBox: makeNodeComponent("freeBox"),
    // Metadata about props expected for PlasmicPage2
    internalVariantProps: PlasmicPage2__VariantProps,
    internalArgProps: PlasmicPage2__ArgProps
  }
);

export default PlasmicPage2;
/* prettier-ignore-end */
